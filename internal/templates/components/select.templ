package components

type SelectProps struct {
	DisplayName string
	InputName   string
	Searchable  bool
	Clearable   bool
	Attrs       templ.Attributes
}

templ Select(props *SelectProps) {
	<div
		class="relative px-4 py-2 rounded border cursor-pointer min-w-32 inline-flex items-center justify-between data-[disabled]:bg-neutral-100 data-[disabled]:pointer-events-none"
		x-data={ "{ open: false, valueName: '', value: '', search: '' }" }
		x-effect="$el.dataset.value = value; $dispatch('change')"
		@click="open = ! open"
		:style="open && { border: '1px solid rgb(67 56 202)' }"
		{ props.Attrs... }
	>
		<input type="hidden" name={ props.InputName } x-model="value"/>
		<span class="select-none" :class="value == '' && 'text-neutral-500'" x-text={ "value == '' ? '" + props.DisplayName + "' : (valueName || value)" }>{ props.DisplayName }</span>
		<svg x-show="! open" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 12 12" width="12" height="12"><path d="M6 8.825c-.2 0-.4-.1-.5-.2l-3.3-3.3c-.3-.3-.3-.8 0-1.1.3-.3.8-.3 1.1 0l2.7 2.7 2.7-2.7c.3-.3.8-.3 1.1 0 .3.3.3.8 0 1.1l-3.2 3.2c-.2.2-.4.3-.6.3Z"></path></svg>
		<svg x-show="open" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 12 12" width="12" height="12"><path d="M6 4c-.2 0-.4.1-.5.2L2.2 7.5c-.3.3-.3.8 0 1.1.3.3.8.3 1.1 0L6 5.9l2.7 2.7c.3.3.8.3 1.1 0 .3-.3.3-.8 0-1.1L6.6 4.3C6.4 4.1 6.2 4 6 4Z"></path></svg>
		<div class="absolute top-full left-0 mt-1 flex flex-col bg-white shadow rounded border w-full max-h-64 overflow-auto z-10" x-show="open" @click.outside="open = false" x-transition x-cloak>
			if props.Clearable {
				<div class="p-2 border-b flex justify-between items-center text-neutral-600 fill-neutral-600 hover:bg-neutral-200" @click="value = ''; valueName = ''">
					<span>Clear</span>
					<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 12 12" width="12" height="12"><path d="M2.22 2.22a.749.749 0 0 1 1.06 0L6 4.939 8.72 2.22a.749.749 0 1 1 1.06 1.06L7.061 6 9.78 8.72a.749.749 0 1 1-1.06 1.06L6 7.061 3.28 9.78a.749.749 0 1 1-1.06-1.06L4.939 6 2.22 3.28a.749.749 0 0 1 0-1.06Z"></path></svg>
				</div>
			}
			if props.Searchable {
				<input class="p-2 outline-none border-b" type="text" placeholder="Search" x-model="search" @click.stop/>
			}
			{ children... }
		</div>
	</div>
}

type SelectOptionProps struct {
	Name     string
	Value    string
	Selected bool
}

templ SelectOption(props *SelectOptionProps) {
	<span
		class="p-2 w-full hover:bg-neutral-200 select-none cursor-pointer"
		@click={ "value = '" + props.Value + "'; valueName='" + props.Name + "'" }
		x-show="$el.textContent.toLowerCase().includes(search.toLowerCase())"
		if props.Selected {
			x-init={ "value = '" + props.Value + "'; valueName='" + props.Name + "'" }
		}
	>
		if props.Name != "" {
			{ props.Name }
		} else {
			{ props.Value }
		}
	</span>
}
